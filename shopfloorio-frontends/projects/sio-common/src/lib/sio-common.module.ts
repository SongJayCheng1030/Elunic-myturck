import { CdkTreeModule } from '@angular/cdk/tree';
import { CommonModule } from '@angular/common';
import { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { NgbDatepickerModule, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';
import { NgSelectModule } from '@ng-select/ng-select';
import { TranslateLoader, TranslateModule } from '@ngx-translate/core';
import { ZXingScannerModule } from '@zxing/ngx-scanner';
import { QRCodeModule } from 'angularx-qrcode';
import { ColorPickerModule } from 'ngx-color-picker';
import { CookieModule } from 'ngx-cookie';
import { MultiTranslateHttpLoader } from 'ngx-translate-multi-http-loader';

import {
  AgGridActionDropdownComponent,
  AgGridListFilterComponent,
  AgGridListFloatingFilterSelectOption,
  ButtonComponent,
  CheckboxComponent,
  DropdownComponent,
  FooterComponent,
  HeaderComponent,
  InputComponent,
  LinearGaugeComponent,
  LoaderComponent,
  PageCardLayoutComponent,
  PageLayoutComponent,
  PageTitleComponent,
  SearchComponent,
  SelectComponent,
  SidebarComponent,
  SingleSelectComponent,
  StatusLegendComponent,
  TimeRangeComponent,
} from './components';
import { AppsNavMenuComponent } from './components/apps-nav-menu/apps-nav-menu.component';
import {
  CellDirective,
  DataRowDefDirective,
  DataRowDirective,
  EmptyRowDefDirective,
  EmptyRowDirective,
  HeaderCellComponent,
  HeaderRowDefDirective,
  HeaderSortDirective,
  PanelBodyDirective,
  PanelComponent,
  PanelHeaderActionsDirective,
  PanelHeaderDirective,
  RowComponent,
  TableComponent,
  TreeDataRowDefDirective,
  TreeDataRowDirective,
  TreeTableComponent,
  TreeToggleCellComponent,
} from './containers';
import {
  BackButtonDirective,
  HasRightDirective,
  MultilangDirective,
  MultilangFormControlDirective,
  UploadButtonDirective,
} from './directives';
import { HasRoleDirective } from './directives/has-role.directive';
import { NoTenantRedirectHttpInterceptor } from './interceptors/no-tenant-redirect.interceptor';
import {
  ModalConfirmComponent,
  ModalDocumentComponent,
  ModalGroupFilterComponent,
  ModalMessageComponent,
  ModalQrCodesComponent,
  ModalScannerComponent,
} from './modals';
import {
  FilterPipe,
  IconUrlPipe,
  MorePipe,
  MultilangValuePipe,
  ObjectValuePipe,
  SortByPipe,
  UsernamePipe,
} from './pipes';
import { FRONTEND_DEFAULT_LANGUAGE } from './util/language';

export function HttpLoaderFactory(http: HttpClient) {
  return new MultiTranslateHttpLoader(http, [
    { prefix: './assets/i18n/', suffix: '.json' },
    { prefix: './sio-common/assets/i18n/', suffix: '.json' },
  ]);
}

@NgModule({
  declarations: [
    HeaderComponent,
    LinearGaugeComponent,
    LoaderComponent,
    CheckboxComponent,
    SearchComponent,
    ButtonComponent,
    DropdownComponent,
    FooterComponent,
    InputComponent,
    PageCardLayoutComponent,
    PageLayoutComponent,
    PageTitleComponent,
    SelectComponent,
    SidebarComponent,
    SingleSelectComponent,
    StatusLegendComponent,
    TimeRangeComponent,
    BackButtonDirective,
    HasRightDirective,
    MultilangFormControlDirective,
    MultilangDirective,
    UploadButtonDirective,
    FilterPipe,
    SortByPipe,
    UsernamePipe,
    IconUrlPipe,
    MorePipe,
    MultilangValuePipe,
    CellDirective,
    DataRowDefDirective,
    DataRowDirective,
    EmptyRowDefDirective,
    EmptyRowDirective,
    HeaderCellComponent,
    HeaderRowDefDirective,
    HeaderSortDirective,
    PanelBodyDirective,
    PanelComponent,
    PanelHeaderActionsDirective,
    PanelHeaderDirective,
    RowComponent,
    TableComponent,
    TreeDataRowDefDirective,
    TreeDataRowDirective,
    TreeTableComponent,
    TreeToggleCellComponent,
    ModalConfirmComponent,
    ModalDocumentComponent,
    ModalMessageComponent,
    ModalQrCodesComponent,
    ModalScannerComponent,
    ModalGroupFilterComponent,
    HasRoleDirective,
    AppsNavMenuComponent,
    AgGridActionDropdownComponent,
    AgGridListFilterComponent,
    AgGridListFloatingFilterSelectOption,
    ObjectValuePipe,
  ],
  imports: [
    CdkTreeModule,
    NgbDropdownModule,
    CommonModule,
    HttpClientModule,
    ReactiveFormsModule,
    FormsModule,
    TranslateModule.forRoot({
      loader: {
        provide: TranslateLoader,
        useFactory: HttpLoaderFactory,
        deps: [HttpClient],
      },
      defaultLanguage: FRONTEND_DEFAULT_LANGUAGE,
    }),
    ColorPickerModule,
    NgbDatepickerModule,
    QRCodeModule,
    ZXingScannerModule,
    CookieModule.forChild(),
    NgSelectModule,
  ],
  exports: [
    HeaderComponent,
    LinearGaugeComponent,
    LoaderComponent,
    CheckboxComponent,
    SearchComponent,
    ButtonComponent,
    DropdownComponent,
    FooterComponent,
    InputComponent,
    PageCardLayoutComponent,
    PageLayoutComponent,
    PageTitleComponent,
    SelectComponent,
    SidebarComponent,
    SingleSelectComponent,
    StatusLegendComponent,
    TimeRangeComponent,
    BackButtonDirective,
    HasRightDirective,
    MultilangFormControlDirective,
    MultilangDirective,
    UploadButtonDirective,
    FilterPipe,
    SortByPipe,
    UsernamePipe,
    IconUrlPipe,
    MorePipe,
    MultilangValuePipe,
    CellDirective,
    DataRowDefDirective,
    DataRowDirective,
    EmptyRowDefDirective,
    EmptyRowDirective,
    HeaderCellComponent,
    HeaderRowDefDirective,
    HeaderSortDirective,
    PanelBodyDirective,
    PanelComponent,
    PanelHeaderActionsDirective,
    PanelHeaderDirective,
    RowComponent,
    TableComponent,
    TreeDataRowDefDirective,
    TreeDataRowDirective,
    TreeTableComponent,
    TreeToggleCellComponent,
    ModalConfirmComponent,
    ModalMessageComponent,
    ModalQrCodesComponent,
    ModalScannerComponent,
    ModalGroupFilterComponent,
    TranslateModule,
    HasRoleDirective,
    AppsNavMenuComponent,
    AgGridActionDropdownComponent,
    AgGridListFilterComponent,
    AgGridListFloatingFilterSelectOption,
    ObjectValuePipe,
  ],
  providers: [
    {
      provide: HTTP_INTERCEPTORS,
      useClass: NoTenantRedirectHttpInterceptor,
      multi: true,
    },
  ],
})
export class SioCommonModule {}
